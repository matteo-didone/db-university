ESERCIZIO GROUP BY

Contare quanti iscritti ci sono stati ogni anno

SELECT YEAR(`students`.`enrolment_date`) AS 'Year',  COUNT(YEAR(`students`.`enrolment_date`)) AS 'Total Enrollments'
FROM `students`
GROUP BY YEAR(`students`.`enrolment_date`);


Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT `teachers`.`office_address` AS 'Office Address', COUNT(`teachers`.`office_address`) AS 'Amount of Teachers for Address'
FROM `teachers`
GROUP BY `teachers`.`office_address`;


Calcolare la media dei voti di ogni appello d'esame
  
SELECT `exam_student`.`exam_id` AS 'Exam ID', AVG(`exam_student`.`vote`) AS 'Average'
FROM `exam_student`
GROUP BY `exam_student`.`exam_id`
ORDER BY AVG(`exam_student`.`vote`) ASC;


Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT  `departments`.`name` AS 'Department Name', COUNT(`degrees`.`id`) AS 'Degrees'
FROM `degrees`
JOIN `departments`
ON `departments`.`id` = `degrees`.`department_id`
GROUP BY `departments`.`name`
ORDER BY COUNT(`degrees`.`id`) DESC;



ESERCIZIO JOIN

Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

SELECT `students`.`name`, `students`.`surname`, `students`.`registration_number`, `degrees`.`name`
FROM `students`
JOIN `degrees` 
ON `students`.`degree_id` = `degrees`.`id`
WHERE `degrees`.`name` = "Corso di Laurea in Economia";


Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze

SELECT *
FROM `degrees`
JOIN `departments` 
ON `departments`.`id` = `degrees`.`department_id`
WHERE `departments`.`name` = "Dipartimento di Neuroscienze"
AND `degrees`.`level` = "magistrale";


Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

SELECT *
FROM `courses`
JOIN `course_teacher`
ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers`
ON `course_teacher`.`teacher_id` = `teacher_id`
WHERE `teachers`.`id` = 44;

Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT `students`.`name`, `students`.`surname`, `students`.`fiscal_code`, `degrees`.`name`, `departments`.`name`
FROM `students`
JOIN `degrees`
ON `students`.`degree_id` = `degrees`.`id`
JOIN `departments`
ON `degrees`.`department_id` = `departments`.id
ORDER BY `students`.`surname` ASC, `students`.`name` ASC;


Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

SELECT `degrees`.*, `courses`.`name` AS 'Course Name', `courses`.`year`, `teachers`.`name` AS 'Teacher Name', `teachers`.`surname` AS 'Last Name'
FROM `degrees`
JOIN `courses`
ON `degrees`.`id` = `courses`.`degree_id`
JOIN `course_teacher`
ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `teachers`
ON `teachers`.`id` = `course_teacher`.`teacher_id`;


Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT `teachers`.*, `departments`.name
FROM `teachers`
JOIN `course_teacher`
ON `course_teacher`.`teacher_id` = `teachers`.`id`
JOIN `courses`
ON `courses`.`id` = `course_teacher`.`course_id`
JOIN `degrees`
ON `degrees`.`id` = `courses`.`degree_id`
JOIN `departments`      
ON `departments`.`id` = `degrees`.`department_id`
WHERE `departments`.`name` = 'Dipartimento di Matematica';


Selezionare per ogni studente il numero di tentativi sostenuti per ogni esame, stampando anche il voto massimo. Successivamente, filtrare i tentativi con voto minimo 18.

SELECT `students`.`id`, `students`.`name`, `students`.`surname`, `courses`.`name`
COUNT(`exam_student`.`vote`) AS `Attempts`, MAX (`exam_student`.`vote`) AS `Final Grade`
FROM `students`
JOIN `exam_student` 
ON `students`.`id` = `exam_student`.`student_id`
JOIN `exams`
ON `exams`.`id` = `exam_student`.`exam_id`
GROUP BY `students`.`id`, `courses`.`id`;
ORDER BY `Attempts` DESC;
